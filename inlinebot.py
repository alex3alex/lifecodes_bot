import os
from typing import Optional

from fastapi import FastAPI
from pydantic import BaseModel

from telegram import Bot

TOKEN = os.environ.get("BOT_TOKEN")
APP_NAME = os.environ.get("APP_NAME")

app = FastAPI()

class TelegramWebhook(BaseModel):
    '''
    Telegram Webhook Model using Pydantic for request body validation
    '''
    update_id: int
    message: Optional[dict]
    edited_message: Optional[dict]
    channel_post: Optional[dict]
    edited_channel_post: Optional[dict]
    inline_query: Optional[dict]
    chosen_inline_result: Optional[dict]
    callback_query: Optional[dict]
    shipping_query: Optional[dict]
    pre_checkout_query: Optional[dict]
    poll: Optional[dict]
    poll_answer: Optional[dict]

def send_message(chat_id, text):
    """
    Helper function to send a message using Telegram Bot API.
    """
    bot = Bot(token=TOKEN)
    bot.send_message(chat_id=chat_id, text=text)

@app.post("/webhook")
def webhook(webhook_data: TelegramWebhook):
    '''
    Telegram Webhook
    '''
    # –ú–µ—Ç–æ–¥ 1 (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω)
    # bot = Bot(token=TOKEN)
    # update = Update.de_json(webhook_data.__dict__, bot)  # convert the Telegram Webhook class to dictionary using __dict__ dunder method
    # dispatcher = Dispatcher(bot, None, workers=4)
    # register_handlers(dispatcher)
    # dispatcher.process_update(update)

    # –ú–µ—Ç–æ–¥ 2 (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
    if webhook_data.message:
        if webhook_data.message.get("text") == '/start':
            chat_id = webhook_data.message["chat"]["id"]
            send_message(chat_id, """üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!  
–¢—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –∑–∞–¥—É–º—ã–≤–∞–ª—Å—è, –Ω–∞—Å–∫–æ–ª—å–∫–æ –≤–∞–∂–Ω–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö? üí°  
–ù–∞—à –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ:  
 ‚ú® –£–∑–Ω–∞—Ç—å, –∫–∞–∫ –±—É–¥—É—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤–∞—à–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è (–¥–µ–ª–æ–≤—ã–µ, –¥—Ä—É–∂–µ—Å–∫–∏–µ –∏–ª–∏ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ).  
 üó∫Ô∏è –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–∏—á–∏–Ω—ã –≤—Å—Ç—Ä–µ—á –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã.  
 ü§ù –†–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –≤ –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–µ.  

 üîç –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –≤–∞—à–∏ —Å–≤—è–∑–∏ –∏ —Å–¥–µ–ª–∞—Ç—å –∏—Ö –∫—Ä–µ–ø—á–µ! üöÄ""")

    return {"message": "ok"}


@app.get("/")
def index():
    return {"message": "Hello World"}
